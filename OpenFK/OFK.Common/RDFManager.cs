using System.Text;

namespace OpenFK
{
    class RDFManager
    {
        /// <summary>
        /// the column to roll
        /// </summary>
        private static char[][] col = new char[][]
        {
        new char[] {(char)0x44, (char)0x45, (char)0x46, (char)0x47, (char)0x40, (char)0x41, (char)0x42, (char)0x43, (char)0x4C, (char)0x4D, (char)0x4E, (char)0x4F, (char)0x48, (char)0x49, (char)0x4A, (char)0x4B, (char)0x54, (char)0x55, (char)0x56, (char)0x57, (char)0x50, (char)0x51, (char)0x52, (char)0x53, (char)0x5C, (char)0x5D, (char)0x5E, (char)0x5F, (char)0x58, (char)0x59, (char)0x5A, (char)0x5B, (char)0x64, (char)0x65, (char)0x66, (char)0x67, (char)0x60, (char)0x61, (char)0x62, (char)0x63, (char)0x6C, (char)0x6D, (char)0x6E, (char)0x6F, (char)0x68, (char)0x69, (char)0x6A, (char)0x6B, (char)0x74, (char)0x75, (char)0x76, (char)0x77, (char)0x70, (char)0x71, (char)0x72, (char)0x73, (char)0x7C, (char)0x7D, (char)0x7E, (char)0x7F, (char)0x78, (char)0x79, (char)0x7A, (char)0x7B, (char)0x04, (char)0x05, (char)0x06, (char)0x07, (char)0x00, (char)0x01, (char)0x02, (char)0x03, (char)0x0C, (char)0x0D, (char)0x0E, (char)0x0F, (char)0x08, (char)0x09, (char)0x0A, (char)0x0B, (char)0x14, (char)0x15, (char)0x16, (char)0x17, (char)0x10, (char)0x11, (char)0x12, (char)0x13, (char)0x1C, (char)0x1D, (char)0x1E, (char)0x1F, (char)0x18, (char)0x19, (char)0x1A, (char)0x1B, (char)0x24, (char)0x25, (char)0x26, (char)0x27, (char)0x20, (char)0x21, (char)0x22, (char)0x23, (char)0x2C, (char)0x2D, (char)0x2E, (char)0x2F, (char)0x28, (char)0x29, (char)0x2A, (char)0x2B, (char)0x34, (char)0x35, (char)0x36, (char)0x37, (char)0x30, (char)0x31, (char)0x32, (char)0x33, (char)0x3C, (char)0x3D, (char)0x3E, (char)0x3F, (char)0x38, (char)0x39, (char)0x3A, (char)0x3B, (char)0x84, (char)0x85, (char)0x86, (char)0x87, (char)0x80, (char)0x81, (char)0x82, (char)0x83, (char)0x8C, (char)0x8D, (char)0x8E, (char)0x8F, (char)0x88, (char)0x89, (char)0x8A, (char)0x8B, (char)0x94, (char)0x95, (char)0x96, (char)0x97, (char)0x90, (char)0x91, (char)0x92, (char)0x93, (char)0x9C, (char)0x9D, (char)0x9E, (char)0x9F, (char)0x98, (char)0x99, (char)0x9A, (char)0x9B, (char)0xA4, (char)0xA5, (char)0xA6, (char)0xA7, (char)0xA0, (char)0xA1, (char)0xA2, (char)0xA3, (char)0xAC, (char)0xAD, (char)0xAE, (char)0xAF, (char)0xA8, (char)0xA9, (char)0xAA, (char)0xAB, (char)0xB4, (char)0xB5, (char)0xB6, (char)0xB7, (char)0xB0, (char)0xB1, (char)0xB2, (char)0xB3, (char)0xBC, (char)0xBD, (char)0xBE, (char)0xBF, (char)0xB8, (char)0xB9, (char)0xBA, (char)0xBB, (char)0xC4, (char)0xC5, (char)0xC6, (char)0xC7, (char)0xC0, (char)0xC1, (char)0xC2, (char)0xC3, (char)0xCC, (char)0xCD, (char)0xCE, (char)0xCF, (char)0xC8, (char)0xC9, (char)0xCA, (char)0xCB, (char)0xD4, (char)0xD5, (char)0xD6, (char)0xD7, (char)0xD0, (char)0xD1, (char)0xD2, (char)0xD3, (char)0xDC, (char)0xDD, (char)0xDE, (char)0xDF, (char)0xD8, (char)0xD9, (char)0xDA, (char)0xDB, (char)0xE4, (char)0xE5, (char)0xE6, (char)0xE7, (char)0xE0, (char)0xE1, (char)0xE2, (char)0xE3, (char)0xEC, (char)0xED, (char)0xEE, (char)0xEF, (char)0xE8, (char)0xE9, (char)0xEA, (char)0xEB, (char)0xF4, (char)0xF5, (char)0xF6, (char)0xF7, (char)0xF0, (char)0xF1, (char)0xF2, (char)0xF3, (char)0xFC, (char)0xFD, (char)0xFE, (char)0xFF, (char)0xF8, (char)0xF9, (char)0xFA, (char)0xFB},
        new char[] {(char)0x32, (char)0x33, (char)0x30, (char)0x31, (char)0x36, (char)0x37, (char)0x34, (char)0x35, (char)0x3A, (char)0x3B, (char)0x38, (char)0x39, (char)0x3E, (char)0x3F, (char)0x3C, (char)0x3D, (char)0x22, (char)0x23, (char)0x20, (char)0x21, (char)0x26, (char)0x27, (char)0x24, (char)0x25, (char)0x2A, (char)0x2B, (char)0x28, (char)0x29, (char)0x2E, (char)0x2F, (char)0x2C, (char)0x2D, (char)0x12, (char)0x13, (char)0x10, (char)0x11, (char)0x16, (char)0x17, (char)0x14, (char)0x15, (char)0x1A, (char)0x1B, (char)0x18, (char)0x19, (char)0x1E, (char)0x1F, (char)0x1C, (char)0x1D, (char)0x02, (char)0x03, (char)0x00, (char)0x01, (char)0x06, (char)0x07, (char)0x04, (char)0x05, (char)0x0A, (char)0x0B, (char)0x08, (char)0x09, (char)0x0E, (char)0x0F, (char)0x0C, (char)0x0D, (char)0x72, (char)0x73, (char)0x70, (char)0x71, (char)0x76, (char)0x77, (char)0x74, (char)0x75, (char)0x7A, (char)0x7B, (char)0x78, (char)0x79, (char)0x7E, (char)0x7F, (char)0x7C, (char)0x7D, (char)0x62, (char)0x63, (char)0x60, (char)0x61, (char)0x66, (char)0x67, (char)0x64, (char)0x65, (char)0x6A, (char)0x6B, (char)0x68, (char)0x69, (char)0x6E, (char)0x6F, (char)0x6C, (char)0x6D, (char)0x52, (char)0x53, (char)0x50, (char)0x51, (char)0x56, (char)0x57, (char)0x54, (char)0x55, (char)0x5A, (char)0x5B, (char)0x58, (char)0x59, (char)0x5E, (char)0x5F, (char)0x5C, (char)0x5D, (char)0x42, (char)0x43, (char)0x40, (char)0x41, (char)0x46, (char)0x47, (char)0x44, (char)0x45, (char)0x4A, (char)0x4B, (char)0x48, (char)0x49, (char)0x4E, (char)0x4F, (char)0x4C, (char)0x4D, (char)0xF2, (char)0xF3, (char)0xF0, (char)0xF1, (char)0xF6, (char)0xF7, (char)0xF4, (char)0xF5, (char)0xFA, (char)0xFB, (char)0xF8, (char)0xF9, (char)0xFE, (char)0xFF, (char)0xFC, (char)0xFD, (char)0xE2, (char)0xE3, (char)0xE0, (char)0xE1, (char)0xE6, (char)0xE7, (char)0xE4, (char)0xE5, (char)0xEA, (char)0xEB, (char)0xE8, (char)0xE9, (char)0xEE, (char)0xEF, (char)0xEC, (char)0xED, (char)0xD2, (char)0xD3, (char)0xD0, (char)0xD1, (char)0xD6, (char)0xD7, (char)0xD4, (char)0xD5, (char)0xDA, (char)0xDB, (char)0xD8, (char)0xD9, (char)0xDE, (char)0xDF, (char)0xDC, (char)0xDD, (char)0xC2, (char)0xC3, (char)0xC0, (char)0xC1, (char)0xC6, (char)0xC7, (char)0xC4, (char)0xC5, (char)0xCA, (char)0xCB, (char)0xC8, (char)0xC9, (char)0xCE, (char)0xCF, (char)0xCC, (char)0xCD, (char)0xB2, (char)0xB3, (char)0xB0, (char)0xB1, (char)0xB6, (char)0xB7, (char)0xB4, (char)0xB5, (char)0xBA, (char)0xBB, (char)0xB8, (char)0xB9, (char)0xBE, (char)0xBF, (char)0xBC, (char)0xBD, (char)0xA2, (char)0xA3, (char)0xA0, (char)0xA1, (char)0xA6, (char)0xA7, (char)0xA4, (char)0xA5, (char)0xAA, (char)0xAB, (char)0xA8, (char)0xA9, (char)0xAE, (char)0xAF, (char)0xAC, (char)0xAD, (char)0x92, (char)0x93, (char)0x90, (char)0x91, (char)0x96, (char)0x97, (char)0x94, (char)0x95, (char)0x9A, (char)0x9B, (char)0x98, (char)0x99, (char)0x9E, (char)0x9F, (char)0x9C, (char)0x9D, (char)0x82, (char)0x83, (char)0x80, (char)0x81, (char)0x86, (char)0x87, (char)0x84, (char)0x85, (char)0x8A, (char)0x8B, (char)0x88, (char)0x89, (char)0x8E, (char)0x8F, (char)0x8C, (char)0x8D},
        new char[] {(char)0x6C, (char)0x6D, (char)0x6E, (char)0x6F, (char)0x68, (char)0x69, (char)0x6A, (char)0x6B, (char)0x64, (char)0x65, (char)0x66, (char)0x67, (char)0x60, (char)0x61, (char)0x62, (char)0x63, (char)0x7C, (char)0x7D, (char)0x7E, (char)0x7F, (char)0x78, (char)0x79, (char)0x7A, (char)0x7B, (char)0x74, (char)0x75, (char)0x76, (char)0x77, (char)0x70, (char)0x71, (char)0x72, (char)0x73, (char)0x4C, (char)0x4D, (char)0x4E, (char)0x4F, (char)0x48, (char)0x49, (char)0x4A, (char)0x4B, (char)0x44, (char)0x45, (char)0x46, (char)0x47, (char)0x40, (char)0x41, (char)0x42, (char)0x43, (char)0x5C, (char)0x5D, (char)0x5E, (char)0x5F, (char)0x58, (char)0x59, (char)0x5A, (char)0x5B, (char)0x54, (char)0x55, (char)0x56, (char)0x57, (char)0x50, (char)0x51, (char)0x52, (char)0x53, (char)0x2C, (char)0x2D, (char)0x2E, (char)0x2F, (char)0x28, (char)0x29, (char)0x2A, (char)0x2B, (char)0x24, (char)0x25, (char)0x26, (char)0x27, (char)0x20, (char)0x21, (char)0x22, (char)0x23, (char)0x3C, (char)0x3D, (char)0x3E, (char)0x3F, (char)0x38, (char)0x39, (char)0x3A, (char)0x3B, (char)0x34, (char)0x35, (char)0x36, (char)0x37, (char)0x30, (char)0x31, (char)0x32, (char)0x33, (char)0x0C, (char)0x0D, (char)0x0E, (char)0x0F, (char)0x08, (char)0x09, (char)0x0A, (char)0x0B, (char)0x04, (char)0x05, (char)0x06, (char)0x07, (char)0x00, (char)0x01, (char)0x02, (char)0x03, (char)0x1C, (char)0x1D, (char)0x1E, (char)0x1F, (char)0x18, (char)0x19, (char)0x1A, (char)0x1B, (char)0x14, (char)0x15, (char)0x16, (char)0x17, (char)0x10, (char)0x11, (char)0x12, (char)0x13, (char)0xAC, (char)0xAD, (char)0xAE, (char)0xAF, (char)0xA8, (char)0xA9, (char)0xAA, (char)0xAB, (char)0xA4, (char)0xA5, (char)0xA6, (char)0xA7, (char)0xA0, (char)0xA1, (char)0xA2, (char)0xA3, (char)0xBC, (char)0xBD, (char)0xBE, (char)0xBF, (char)0xB8, (char)0xB9, (char)0xBA, (char)0xBB, (char)0xB4, (char)0xB5, (char)0xB6, (char)0xB7, (char)0xB0, (char)0xB1, (char)0xB2, (char)0xB3, (char)0x8C, (char)0x8D, (char)0x8E, (char)0x8F, (char)0x88, (char)0x89, (char)0x8A, (char)0x8B, (char)0x84, (char)0x85, (char)0x86, (char)0x87, (char)0x80, (char)0x81, (char)0x82, (char)0x83, (char)0x9C, (char)0x9D, (char)0x9E, (char)0x9F, (char)0x98, (char)0x99, (char)0x9A, (char)0x9B, (char)0x94, (char)0x95, (char)0x96, (char)0x97, (char)0x90, (char)0x91, (char)0x92, (char)0x93, (char)0xEC, (char)0xED, (char)0xEE, (char)0xEF, (char)0xE8, (char)0xE9, (char)0xEA, (char)0xEB, (char)0xE4, (char)0xE5, (char)0xE6, (char)0xE7, (char)0xE0, (char)0xE1, (char)0xE2, (char)0xE3, (char)0xFC, (char)0xFD, (char)0xFE, (char)0xFF, (char)0xF8, (char)0xF9, (char)0xFA, (char)0xFB, (char)0xF4, (char)0xF5, (char)0xF6, (char)0xF7, (char)0xF0, (char)0xF1, (char)0xF2, (char)0xF3, (char)0xCC, (char)0xCD, (char)0xCE, (char)0xCF, (char)0xC8, (char)0xC9, (char)0xCA, (char)0xCB, (char)0xC4, (char)0xC5, (char)0xC6, (char)0xC7, (char)0xC0, (char)0xC1, (char)0xC2, (char)0xC3, (char)0xDC, (char)0xDE, (char)0xDF, (char)0xDF, (char)0xD8, (char)0xD9, (char)0xDA, (char)0xDB, (char)0xD4, (char)0xD5, (char)0xD6, (char)0xD7, (char)0xD0, (char)0xD1, (char)0xD2, (char)0xD3},
        new char[] {(char)0xE5, (char)0xE4, (char)0xE7, (char)0xE6, (char)0xE1, (char)0xE0, (char)0xE3, (char)0xE2, (char)0xED, (char)0xEC, (char)0xEF, (char)0xEE, (char)0xE9, (char)0xE8, (char)0xEB, (char)0xEA, (char)0xF5, (char)0xF4, (char)0xF7, (char)0xF6, (char)0xF1, (char)0xF0, (char)0xF3, (char)0xF2, (char)0xFD, (char)0xFC, (char)0xFF, (char)0xFE, (char)0xF9, (char)0xF8, (char)0xFB, (char)0xFA, (char)0xC5, (char)0xC4, (char)0xC7, (char)0xC6, (char)0xC1, (char)0xC0, (char)0xC3, (char)0xC2, (char)0xCD, (char)0xCC, (char)0xCF, (char)0xCE, (char)0xC9, (char)0xC8, (char)0xCB, (char)0xCA, (char)0xD5, (char)0xD4, (char)0xD7, (char)0xD6, (char)0xD1, (char)0xD0, (char)0xD3, (char)0xD2, (char)0xDD, (char)0xDC, (char)0xDF, (char)0xDE, (char)0xD9, (char)0xD8, (char)0xDB, (char)0xDA, (char)0xA5, (char)0xA4, (char)0xA7, (char)0xA6, (char)0xA1, (char)0xA0, (char)0xA3, (char)0xA2, (char)0xAD, (char)0xAC, (char)0xAF, (char)0xAE, (char)0xA9, (char)0xA8, (char)0xAB, (char)0xAA, (char)0xB5, (char)0xB4, (char)0xB7, (char)0xB6, (char)0xB1, (char)0xB0, (char)0xB3, (char)0xB2, (char)0xBD, (char)0xBC, (char)0xBF, (char)0xBE, (char)0xB9, (char)0xB8, (char)0xBB, (char)0xBA, (char)0x85, (char)0x84, (char)0x87, (char)0x86, (char)0x81, (char)0x80, (char)0x83, (char)0x82, (char)0x8D, (char)0x8C, (char)0x8F, (char)0x8E, (char)0x89, (char)0x88, (char)0x8B, (char)0x8A, (char)0x95, (char)0x94, (char)0x97, (char)0x96, (char)0x91, (char)0x90, (char)0x93, (char)0x92, (char)0x9D, (char)0x9C, (char)0x9F, (char)0x9E, (char)0x99, (char)0x98, (char)0x9B, (char)0x9A, (char)0x25, (char)0x24, (char)0x27, (char)0x26, (char)0x21, (char)0x20, (char)0x23, (char)0x22, (char)0x2D, (char)0x2C, (char)0x2F, (char)0x2E, (char)0x29, (char)0x28, (char)0x2B, (char)0x2A, (char)0x35, (char)0x34, (char)0x37, (char)0x36, (char)0x31, (char)0x30, (char)0x33, (char)0x32, (char)0x3D, (char)0x3C, (char)0x3F, (char)0x3E, (char)0x39, (char)0x38, (char)0x3B, (char)0x3A, (char)0x05, (char)0x04, (char)0x07, (char)0x06, (char)0x01, (char)0x00, (char)0x03, (char)0x02, (char)0x0D, (char)0x0C, (char)0x0F, (char)0x0E, (char)0x09, (char)0x08, (char)0x0B, (char)0x0A, (char)0x15, (char)0x14, (char)0x17, (char)0x16, (char)0x11, (char)0x10, (char)0x13, (char)0x12, (char)0x1D, (char)0x1C, (char)0x1F, (char)0x1E, (char)0x19, (char)0x18, (char)0x1B, (char)0x1A, (char)0x65, (char)0x64, (char)0x67, (char)0x66, (char)0x61, (char)0x60, (char)0x63, (char)0x62, (char)0x6D, (char)0x6C, (char)0x6F, (char)0x6E, (char)0x69, (char)0x68, (char)0x6B, (char)0x6A, (char)0x75, (char)0x74, (char)0x77, (char)0x76, (char)0x71, (char)0x70, (char)0x73, (char)0x72, (char)0x7D, (char)0x7C, (char)0x7F, (char)0x7E, (char)0x79, (char)0x78, (char)0x7B, (char)0x7A, (char)0x45, (char)0x44, (char)0x47, (char)0x46, (char)0x41, (char)0x40, (char)0x43, (char)0x42, (char)0x4D, (char)0x4C, (char)0x4F, (char)0x4E, (char)0x49, (char)0x48, (char)0x4B, (char)0x4A, (char)0x55, (char)0x54, (char)0x57, (char)0x56, (char)0x51, (char)0x50, (char)0x53, (char)0x52, (char)0x5D, (char)0x5C, (char)0x5F, (char)0x5E, (char)0x59, (char)0x58, (char)0x5B, (char)0x5A},
        new char[] {(char)0x88, (char)0x89, (char)0x8A, (char)0x8B, (char)0x8C, (char)0x8D, (char)0x8E, (char)0x8F, (char)0x80, (char)0x81, (char)0x82, (char)0x83, (char)0x84, (char)0x85, (char)0x86, (char)0x87, (char)0x98, (char)0x99, (char)0x9A, (char)0x9B, (char)0x9C, (char)0x9D, (char)0x9E, (char)0x9F, (char)0x90, (char)0x91, (char)0x92, (char)0x93, (char)0x94, (char)0x95, (char)0x96, (char)0x97, (char)0xA8, (char)0xA9, (char)0xAA, (char)0xAB, (char)0xAC, (char)0xAD, (char)0xAE, (char)0xAF, (char)0xA0, (char)0xA1, (char)0xA2, (char)0xA3, (char)0xA4, (char)0xA5, (char)0xA6, (char)0xA7, (char)0xB8, (char)0xB9, (char)0xBA, (char)0xBB, (char)0xBC, (char)0xBD, (char)0xBE, (char)0xBF, (char)0xB0, (char)0xB1, (char)0xB2, (char)0xB3, (char)0xB4, (char)0xB5, (char)0xB6, (char)0xB7, (char)0xC8, (char)0xC9, (char)0xCA, (char)0xCB, (char)0xCC, (char)0xCD, (char)0xCE, (char)0xCF, (char)0xC0, (char)0xC1, (char)0xC2, (char)0xC3, (char)0xC4, (char)0xC5, (char)0xC6, (char)0xC7, (char)0xD8, (char)0xD9, (char)0xDA, (char)0xDB, (char)0xDC, (char)0xDD, (char)0xDE, (char)0xDF, (char)0xD0, (char)0xD1, (char)0xD2, (char)0xD3, (char)0xD4, (char)0xD5, (char)0xD6, (char)0xD7, (char)0xE8, (char)0xE9, (char)0xEA, (char)0xEB, (char)0xEC, (char)0xED, (char)0xEE, (char)0xEF, (char)0xE0, (char)0xE1, (char)0xE2, (char)0xE3, (char)0xE4, (char)0xE5, (char)0xE6, (char)0xE7, (char)0xF8, (char)0xF9, (char)0xFA, (char)0xFB, (char)0xFC, (char)0xFD, (char)0xFE, (char)0xFF, (char)0xF0, (char)0xF1, (char)0xF2, (char)0xF3, (char)0xF4, (char)0xF5, (char)0xF6, (char)0xF7, (char)0x48, (char)0x49, (char)0x4A, (char)0x4B, (char)0x4C, (char)0x4D, (char)0x4E, (char)0x4F, (char)0x40, (char)0x41, (char)0x42, (char)0x43, (char)0x44, (char)0x45, (char)0x46, (char)0x47, (char)0x58, (char)0x59, (char)0x5A, (char)0x5B, (char)0x5C, (char)0x5D, (char)0x5E, (char)0x5F, (char)0x50, (char)0x51, (char)0x52, (char)0x53, (char)0x54, (char)0x55, (char)0x56, (char)0x57, (char)0x68, (char)0x69, (char)0x6A, (char)0x6B, (char)0x6C, (char)0x6D, (char)0x6E, (char)0x6F, (char)0x60, (char)0x61, (char)0x62, (char)0x63, (char)0x64, (char)0x65, (char)0x66, (char)0x67, (char)0x78, (char)0x79, (char)0x7A, (char)0x7B, (char)0x7C, (char)0x7D, (char)0x7E, (char)0x7F, (char)0x70, (char)0x71, (char)0x72, (char)0x73, (char)0x74, (char)0x75, (char)0x76, (char)0x77, (char)0x08, (char)0x09, (char)0x0A, (char)0x0B, (char)0x0C, (char)0x0D, (char)0x0E, (char)0x0F, (char)0x00, (char)0x01, (char)0x02, (char)0x03, (char)0x04, (char)0x05, (char)0x06, (char)0x07, (char)0x18, (char)0x19, (char)0x1A, (char)0x1B, (char)0x1C, (char)0x1D, (char)0x1E, (char)0x1F, (char)0x10, (char)0x11, (char)0x12, (char)0x13, (char)0x14, (char)0x15, (char)0x16, (char)0x17, (char)0x28, (char)0x29, (char)0x2A, (char)0x2B, (char)0x2C, (char)0x2D, (char)0x2E, (char)0x2F, (char)0x20, (char)0x21, (char)0x22, (char)0x23, (char)0x24, (char)0x25, (char)0x26, (char)0x27, (char)0x38, (char)0x39, (char)0x3A, (char)0x3B, (char)0x3C, (char)0x3D, (char)0x3E, (char)0x3F, (char)0x30, (char)0x31, (char)0x32, (char)0x33, (char)0x34, (char)0x35, (char)0x36, (char)0x37},
        new char[] {(char)0x79, (char)0x78, (char)0x7B, (char)0x7A, (char)0x7D, (char)0x7C, (char)0x7F, (char)0x7E, (char)0x71, (char)0x70, (char)0x73, (char)0x72, (char)0x75, (char)0x74, (char)0x77, (char)0x76, (char)0x69, (char)0x68, (char)0x6B, (char)0x6A, (char)0x6D, (char)0x6C, (char)0x6F, (char)0x6E, (char)0x61, (char)0x60, (char)0x63, (char)0x62, (char)0x65, (char)0x64, (char)0x67, (char)0x66, (char)0x59, (char)0x58, (char)0x5B, (char)0x5A, (char)0x5D, (char)0x5C, (char)0x5F, (char)0x5E, (char)0x51, (char)0x50, (char)0x53, (char)0x52, (char)0x55, (char)0x54, (char)0x57, (char)0x56, (char)0x49, (char)0x48, (char)0x4B, (char)0x4A, (char)0x4D, (char)0x4C, (char)0x4F, (char)0x4E, (char)0x41, (char)0x40, (char)0x43, (char)0x42, (char)0x45, (char)0x44, (char)0x47, (char)0x46, (char)0x39, (char)0x38, (char)0x3B, (char)0x3A, (char)0x3D, (char)0x3C, (char)0x3F, (char)0x3E, (char)0x31, (char)0x30, (char)0x33, (char)0x32, (char)0x35, (char)0x34, (char)0x37, (char)0x36, (char)0x29, (char)0x28, (char)0x2B, (char)0x2A, (char)0x2D, (char)0x2C, (char)0x2F, (char)0x2E, (char)0x21, (char)0x20, (char)0x23, (char)0x22, (char)0x25, (char)0x24, (char)0x27, (char)0x26, (char)0x19, (char)0x18, (char)0x1B, (char)0x1A, (char)0x1D, (char)0x1C, (char)0x1F, (char)0x1E, (char)0x11, (char)0x10, (char)0x13, (char)0x12, (char)0x15, (char)0x14, (char)0x17, (char)0x16, (char)0x09, (char)0x08, (char)0x0B, (char)0x0A, (char)0x0D, (char)0x0C, (char)0x0F, (char)0x0E, (char)0x01, (char)0x00, (char)0x03, (char)0x02, (char)0x05, (char)0x04, (char)0x07, (char)0x06, (char)0xB9, (char)0xB8, (char)0xBB, (char)0xBA, (char)0xBD, (char)0xBC, (char)0xBF, (char)0xBE, (char)0xB1, (char)0xB0, (char)0xB3, (char)0xB2, (char)0xB5, (char)0xB4, (char)0xB7, (char)0xB6, (char)0xA9, (char)0xA8, (char)0xAB, (char)0xAA, (char)0xAD, (char)0xAC, (char)0xAF, (char)0xAE, (char)0xA1, (char)0xA0, (char)0xA3, (char)0xA2, (char)0xA5, (char)0xA4, (char)0xA7, (char)0xA6, (char)0x99, (char)0x98, (char)0x9B, (char)0x9A, (char)0x9D, (char)0x9C, (char)0x9F, (char)0x9E, (char)0x91, (char)0x90, (char)0x93, (char)0x92, (char)0x95, (char)0x94, (char)0x97, (char)0x96, (char)0x89, (char)0x88, (char)0x8B, (char)0x8A, (char)0x8D, (char)0x8C, (char)0x8F, (char)0x8E, (char)0x81, (char)0x80, (char)0x83, (char)0x82, (char)0x85, (char)0x84, (char)0x87, (char)0x86, (char)0xF9, (char)0xF8, (char)0xFB, (char)0xFA, (char)0xFD, (char)0xFC, (char)0xFF, (char)0xFE, (char)0xF1, (char)0xF0, (char)0xF3, (char)0xF2, (char)0xF5, (char)0xF4, (char)0xF7, (char)0xF6, (char)0xE9, (char)0xE8, (char)0xEB, (char)0xEA, (char)0xED, (char)0xEC, (char)0xEF, (char)0xEE, (char)0xE1, (char)0xE0, (char)0xE3, (char)0xE2, (char)0xE5, (char)0xE4, (char)0xE7, (char)0xE6, (char)0xD9, (char)0xD8, (char)0xDB, (char)0xDA, (char)0xDD, (char)0xDC, (char)0xDF, (char)0xDE, (char)0xD1, (char)0xD0, (char)0xD3, (char)0xD2, (char)0xD5, (char)0xD4, (char)0xD7, (char)0xD6, (char)0xC9, (char)0xC8, (char)0xCB, (char)0xCA, (char)0xCD, (char)0xCC, (char)0xCF, (char)0xCE, (char)0xC1, (char)0xC0, (char)0xC3, (char)0xC2, (char)0xC5, (char)0xC4, (char)0xC7, (char)0xC6},
        new char[] {(char)0x7F, (char)0x7E, (char)0x7D, (char)0x7C, (char)0x7B, (char)0x7A, (char)0x79, (char)0x78, (char)0x77, (char)0x76, (char)0x75, (char)0x74, (char)0x73, (char)0x72, (char)0x71, (char)0x70, (char)0x6F, (char)0x6E, (char)0x6D, (char)0x6C, (char)0x6B, (char)0x6A, (char)0x69, (char)0x68, (char)0x67, (char)0x66, (char)0x65, (char)0x64, (char)0x63, (char)0x62, (char)0x61, (char)0x60, (char)0x5F, (char)0x5E, (char)0x5D, (char)0x5C, (char)0x5B, (char)0x5A, (char)0x59, (char)0x58, (char)0x57, (char)0x56, (char)0x55, (char)0x54, (char)0x53, (char)0x52, (char)0x51, (char)0x50, (char)0x4F, (char)0x4E, (char)0x4D, (char)0x4C, (char)0x4B, (char)0x4A, (char)0x49, (char)0x48, (char)0x47, (char)0x46, (char)0x45, (char)0x44, (char)0x43, (char)0x42, (char)0x41, (char)0x40, (char)0x3F, (char)0x3E, (char)0x3D, (char)0x3C, (char)0x3B, (char)0x3A, (char)0x39, (char)0x38, (char)0x37, (char)0x36, (char)0x35, (char)0x34, (char)0x33, (char)0x32, (char)0x31, (char)0x30, (char)0x2F, (char)0x2E, (char)0x2D, (char)0x2C, (char)0x2B, (char)0x2A, (char)0x29, (char)0x28, (char)0x27, (char)0x26, (char)0x25, (char)0x24, (char)0x23, (char)0x22, (char)0x21, (char)0x20, (char)0x1F, (char)0x1E, (char)0x1D, (char)0x1C, (char)0x1B, (char)0x1A, (char)0x19, (char)0x18, (char)0x17, (char)0x16, (char)0x15, (char)0x14, (char)0x13, (char)0x12, (char)0x11, (char)0x10, (char)0x0F, (char)0x0E, (char)0x0D, (char)0x0C, (char)0x0B, (char)0x0A, (char)0x09, (char)0x08, (char)0x07, (char)0x06, (char)0x05, (char)0x04, (char)0x03, (char)0x02, (char)0x01, (char)0x00, (char)0xBF, (char)0xBE, (char)0xBD, (char)0xBC, (char)0xBB, (char)0xBA, (char)0xB9, (char)0xB8, (char)0xB7, (char)0xB6, (char)0xB5, (char)0xB4, (char)0xB3, (char)0xB2, (char)0xB1, (char)0xB0, (char)0xAF, (char)0xAE, (char)0xAD, (char)0xAC, (char)0xAB, (char)0xAA, (char)0xA9, (char)0xA8, (char)0xA7, (char)0xA6, (char)0xA5, (char)0xA4, (char)0xA3, (char)0xA2, (char)0xA1, (char)0xA0, (char)0x9F, (char)0x9E, (char)0x9D, (char)0x9C, (char)0x9B, (char)0x9A, (char)0x99, (char)0x98, (char)0x97, (char)0x96, (char)0x95, (char)0x94, (char)0x93, (char)0x92, (char)0x91, (char)0x90, (char)0x8F, (char)0x8E, (char)0x8D, (char)0x8C, (char)0x8B, (char)0x8A, (char)0x89, (char)0x88, (char)0x87, (char)0x86, (char)0x85, (char)0x84, (char)0x83, (char)0x82, (char)0x81, (char)0x80, (char)0xFF, (char)0xFE, (char)0xFD, (char)0xFC, (char)0xFB, (char)0xFA, (char)0xF9, (char)0xF8, (char)0xF7, (char)0xF6, (char)0xF5, (char)0xF4, (char)0xF3, (char)0xF2, (char)0xF1, (char)0xF0, (char)0xEF, (char)0xEE, (char)0xED, (char)0xEC, (char)0xEB, (char)0xEA, (char)0xE9, (char)0xE8, (char)0xE7, (char)0xE6, (char)0xE5, (char)0xE4, (char)0xE3, (char)0xE2, (char)0xE1, (char)0xE0, (char)0xDF, (char)0xDE, (char)0xDD, (char)0xDC, (char)0xDB, (char)0xDA, (char)0xD9, (char)0xD8, (char)0xD7, (char)0xD6, (char)0xD5, (char)0xD4, (char)0xD3, (char)0xD2, (char)0xD1, (char)0xD0, (char)0xCF, (char)0xCE, (char)0xCD, (char)0xCC, (char)0xCB, (char)0xCA, (char)0xC9, (char)0xC8, (char)0xC7, (char)0xC6, (char)0xC5, (char)0xC4, (char)0xC3, (char)0xC2, (char)0xC1, (char)0xC0},
        new char[] {(char)0x95, (char)0x94, (char)0x97, (char)0x96, (char)0x91, (char)0x90, (char)0x93, (char)0x92, (char)0x9D, (char)0x9C, (char)0x9F, (char)0x9E, (char)0x99, (char)0x98, (char)0x9B, (char)0x9A, (char)0x85, (char)0x84, (char)0x87, (char)0x86, (char)0x81, (char)0x80, (char)0x83, (char)0x82, (char)0x8D, (char)0x8C, (char)0x8F, (char)0x8E, (char)0x89, (char)0x88, (char)0x8B, (char)0x8A, (char)0xB5, (char)0xB4, (char)0xB7, (char)0xB6, (char)0xB1, (char)0xB0, (char)0xB3, (char)0xB2, (char)0xBD, (char)0xBC, (char)0xBF, (char)0xBE, (char)0xB9, (char)0xB8, (char)0xBB, (char)0xBA, (char)0xA5, (char)0xA4, (char)0xA7, (char)0xA6, (char)0xA1, (char)0xA0, (char)0xA3, (char)0xA2, (char)0xAD, (char)0xAC, (char)0xAF, (char)0xAE, (char)0xA9, (char)0xA8, (char)0xAB, (char)0xAA, (char)0xD5, (char)0xD4, (char)0xD7, (char)0xD6, (char)0xD1, (char)0xD0, (char)0xD3, (char)0xD2, (char)0xDD, (char)0xDC, (char)0xDF, (char)0xDE, (char)0xD9, (char)0xD8, (char)0xDB, (char)0xDA, (char)0xC5, (char)0xC4, (char)0xC7, (char)0xC6, (char)0xC1, (char)0xC0, (char)0xC3, (char)0xC2, (char)0xCD, (char)0xCC, (char)0xCF, (char)0xCE, (char)0xC9, (char)0xC8, (char)0xCB, (char)0xCA, (char)0xF5, (char)0xF4, (char)0xF7, (char)0xF6, (char)0xF1, (char)0xF0, (char)0xF3, (char)0xF2, (char)0xFD, (char)0xFC, (char)0xFF, (char)0xFE, (char)0xF9, (char)0xF8, (char)0xFB, (char)0xFA, (char)0xE5, (char)0xE4, (char)0xE7, (char)0xE6, (char)0xE1, (char)0xE0, (char)0xE3, (char)0xE2, (char)0xED, (char)0xEC, (char)0xEF, (char)0xEE, (char)0xE9, (char)0xE8, (char)0xEB, (char)0xEA, (char)0x55, (char)0x54, (char)0x57, (char)0x56, (char)0x51, (char)0x50, (char)0x53, (char)0x52, (char)0x5D, (char)0x5C, (char)0x5F, (char)0x5E, (char)0x59, (char)0x58, (char)0x5B, (char)0x5A, (char)0x45, (char)0x44, (char)0x47, (char)0x46, (char)0x41, (char)0x40, (char)0x43, (char)0x42, (char)0x4D, (char)0x4C, (char)0x4F, (char)0x4E, (char)0x49, (char)0x48, (char)0x4B, (char)0x4A, (char)0x75, (char)0x74, (char)0x77, (char)0x76, (char)0x71, (char)0x70, (char)0x73, (char)0x72, (char)0x7D, (char)0x7C, (char)0x7F, (char)0x7E, (char)0x79, (char)0x78, (char)0x7B, (char)0x7A, (char)0x65, (char)0x64, (char)0x67, (char)0x66, (char)0x61, (char)0x60, (char)0x63, (char)0x62, (char)0x6D, (char)0x6C, (char)0x6F, (char)0x6E, (char)0x69, (char)0x68, (char)0x6B, (char)0x6A, (char)0x15, (char)0x14, (char)0x17, (char)0x16, (char)0x11, (char)0x10, (char)0x13, (char)0x12, (char)0x1D, (char)0x1C, (char)0x1F, (char)0x1E, (char)0x19, (char)0x18, (char)0x1B, (char)0x1A, (char)0x05, (char)0x04, (char)0x07, (char)0x06, (char)0x01, (char)0x00, (char)0x03, (char)0x02, (char)0x0D, (char)0x0C, (char)0x0F, (char)0x0E, (char)0x09, (char)0x08, (char)0x0B, (char)0x0A, (char)0x35, (char)0x34, (char)0x37, (char)0x36, (char)0x31, (char)0x30, (char)0x33, (char)0x32, (char)0x3D, (char)0x3C, (char)0x3F, (char)0x3E, (char)0x39, (char)0x38, (char)0x3B, (char)0x3A, (char)0x25, (char)0x24, (char)0x27, (char)0x26, (char)0x21, (char)0x20, (char)0x23, (char)0x22, (char)0x2D, (char)0x2C, (char)0x2F, (char)0x2E, (char)0x29, (char)0x28, (char)0x2B, (char)0x2A}
        };

        /// <summary>
        /// the endings for each column
        /// </summary>
        private static char[][] end = new char[][]
        {
        new char[] {(char)0x44, (char)0x32, (char)0x6C, (char)0xE5, (char)0x8B},
        new char[] {(char)0x32, (char)0x6C, (char)0xE5, (char)0x8C},
        new char[] {(char)0x6C, (char)0xE5, (char)0x8D},
        new char[] {(char)0xE5, (char)0x8E},
        new char[] {(char)0x8F},
        new char[] {(char)0x79, (char)0x7F, (char)0x95, (char)0x44, (char)0x32, (char)0x6C, (char)0xE5, (char)0x88},
        new char[] {(char)0x7F, (char)0x95, (char)0x44, (char)0x32, (char)0x6C, (char)0xE5, (char)0x88},
        new char[] {(char)0x95, (char)0x44, (char)0x32, (char)0x6C, (char)0xE5, (char)0x88}
        };

        /// <summary>
        /// the start of each column
        /// </summary>
        private static char[] start = new char[] { (char)0xFF, (char)0x00, (char)0xFF, (char)0xAC, (char)0xEB, (char)0x96, (char)0xC4, (char)0x2A };

        /// <summary>
        /// Decodes an RDF file.
        /// </summary>
        /// <returns>
        /// A string containing the plain-text XML data.
        /// </returns>
        public static string DecodeRDF(string encoded)
        {
            int currentCol = 0;
            char[] arr = encoded.ToCharArray();
            char[] ret = new char[arr.Length];
            int pos = 0;
            int endchar = 0;
            foreach (char character in arr)
            {
                for (int i = 0; i < 256; i++)
                {
                    if (col[currentCol][i] == character)
                    {
                        ret[pos++] = (char)i;
                        if (i == (char)0x3E)
                        {
                            endchar = pos;
                        }
                        break;
                    }
                }
                currentCol++;
                if (currentCol > 7)
                {
                    currentCol = 0;
                }
            }

            return new string(ret).Substring(start.Length, endchar - start.Length);

        }

        /// <summary>
        /// Encodes a plain-text XML file.
        /// </summary>
        /// <returns>
        /// A string containing the encoded RDF data.
        /// </returns>
        public static string EncodeXML(string decoded)
        {
            Encoding iso_8859_1 = Encoding.GetEncoding("iso-8859-1");
            int currentCol = 0;
            char[] arr = decoded.ToCharArray();
            char[] ret = new char[arr.Length];
            int pos = 0;
            foreach (char character in arr)
            {
                for (int i = 0; i < 256; i++)
                {
                    if (i == character)
                    {
                        ret[pos++] = col[currentCol][i];
                        break;
                    }
                }
                currentCol++;
                if (currentCol > 7)
                {
                    currentCol = 0;
                }
            }
            return new string(iso_8859_1.GetChars(iso_8859_1.GetBytes(new string(start) + new string(ret) + new string(end[currentCol]))));
        }


    }

}
